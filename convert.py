# A simple python script to convert BlackBerry10 Remember notes backup(backed up using Runisoft Ultimate Backup) .rembkp file to individual note files(txt) that are importable to Standard Notes(compatible with note type text/super)
# Before importing the notes to Standard Notes:
#  You probably also have the note attachments backed up(using Ultimate Backup) to some ATT.../ folder that you need to upload to Standard Notes Files feature in order for attachments to reflect as it is
import os
import html2text
import urllib3
from bs4 import BeautifulSoup
import sys

# Getting the file to process
# file = open("RemBkp20230529165054_.html", "r")
# file = open("RemBkp20230529165054.rembkp", "r")
# # read the modified file
# read_content = file.read()
# # print(read_content)

if len(sys.argv) < 2:
  invarg = True
else:
  invarg = False
  f = sys.argv[1]
  file_name, file_ext = os.path.splitext(f)

# print(file_name)
# print(file_ext)
# exit()

if invarg or file_ext != '.rembkp':
  print("Invalid usage. This program expects a .rembkp file generated by Runisoft Ultimate Backup on a BlackBerry10 device.")
  print("\nUsage:\npython3 " + os.path.basename(__file__) + " RemBkpXXXXXXXXXX.rembkp")
  exit()
else:
  pass

file = open(f, "r")

# # After manually doing required modifications to preserve original formatting as much as possible:
# # 1. Replace all occurences of "<div><br><div>" with "<div><br></div><div>" since this seems to be a formatting mistake by Ultimate Backup
# # 2. Replace all occurences of "<div><br></div>" with "<br>"
# # 3. Replace all occurences of "</div>" with ""
# # 4. Replace all occurences of "<div>" with "<br>"
# # 5. Replace all occurences of "&#13" and "&#10" with "<br>"
# # 6. Remove extra newline/s at the end of the file
# # For my usecase, I have also removed the lines that start with Notes|"Flagged Messages"|, but you can leave them as is if you want

# or automate the modifications:
read_content = file.read()
read_content = read_content.replace("<div><br><div>", "<div><br></div><div>")
read_content = read_content.replace("<div><br></div>", "<br>")
read_content = read_content.replace("</div>", "")
read_content = read_content.replace("<div>", "<br>")
read_content = read_content.replace("&#13", "<br>")
read_content = read_content.replace("&#10", "<br>")
read_content = read_content.strip()

NotesArr = read_content.split('\n') #getting newline separated note entries

print("Total Notes: ",len(NotesArr))

def splitCont(content):
  contArr = content.split('|')
  return contArr


def getNoteText(content):
  #argument in form of html text
  h = html2text.HTML2Text()
  h.ignore_links = False
  # h.ignore_links = True

  noteCont = h.handle(content)
  return noteCont

# process each note one by one
for i in NotesArr:
  contArr = splitCont(i);
  contArr = [s.strip('"') for s in contArr] #stripping " from all values
  
  noteName = contArr[2]
  
  # # Test this program for a specific note(name) only
  # if noteName != 'Test Note':
  #   continue

  # Replace '/' and '\' chars with '-' from noteName(since it will be used as file name later on)
  noteName = noteName.replace("\\", "-")
  noteName = noteName.replace("/", "-")
  noteName = noteName.replace("*", "-")
  noteName = noteName.replace(":", "-")
  noteName = noteName.replace("?", "-")


  print("==========Processing: ", noteName)
  noteText = getNoteText(contArr[3])
  # in some notes with numbered lists, such as 1. its replaced to 1\. by Ultimate Backup. Fixing that:
  noteText = noteText.replace("\\.",".")
  noteText = noteText.replace("\\-","-")

  #Remove this line if its breaking some content in your notes
  noteText = noteText.replace("â€Ž","") # may break some Guj

  noteCtime = contArr[6] #creatiion time
  noteMtime = contArr[7] #modification time
  
  noteAttachments = contArr[8] #or [-5]
  noteAttachmentTypes = contArr[12] #or [-1]
  
  # print(noteName)
  print(noteText)
  print(noteCtime)
  print(noteMtime)
  print(noteAttachments)
  print(noteAttachmentTypes)

  if len(noteAttachments):
    attachmentsArr = noteAttachments.split(';')
    attachmentsArr = [s.split('/')[1] for s in attachmentsArr]

    for att in attachmentsArr:
      noteText += '\n\n@' + att

  path = './Standard Notes - Importables'
  if not os.path.exists(path):
    os.makedirs(path)

  j = 1
  tmpnoteName = noteName
  while os.path.exists(os.path.join(path, noteName + ".txt")):
    noteName = tmpnoteName
    noteName += "_" + str(j)
    j += 1

  f = open(os.path.join(path, noteName + ".txt"), "w")
  f.write(noteText)
  f.close()

  print("Total Notes: ",len(NotesArr))